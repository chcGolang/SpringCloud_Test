# server.port= 8082

# 设置服务名称
spring.application.name= order-client

# ribbon或feign 负载均衡,默认用轮询的方式,现在这里配置成随机的方式
# 服务名.ribbon.NFLoadBalancerRuleClassName
# 教程地址: https://blog.csdn.net/rickiyeat/article/details/64918756
product-client.ribbon.NFLoadBalancerRuleClassName= com.netflix.loadbalancer.RandomRule

#通用数据源配置
spring.datasource.driver-class-name= com.mysql.jdbc.Driver
spring.datasource.url= jdbc:mysql://192.168.50.115:3306/SpringCloud_Test?charset=utf8mb4&characterEncoding=utf-8&useSSL=false
spring.datasource.username= root
spring.datasource.password= 123456
# 展示sql语句
spring.jpa.show-sql= true

# redis
spring.redis.host= 192.168.50.115
spring.redis.port= 6379

# rabbitmq的消息总线连接配置
spring.rabbitmq.addresses= 192.168.50.115:5672
spring.rabbitmq.username= user
spring.rabbitmq.password= password

# 定义队列名称
spring.cloud.stream.bindings.myMessageInput.group= order
# 使用json的格式传输数据
spring.cloud.stream.bindings.myMessageInput.content-type= application/json

# hystrix配置案例地址:https://blog.csdn.net/m0_37556444/article/details/82833210
# hystrix设置默认的超时实时
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds= 1500
# 开启熔断
hystrix.command.default.circuitBreaker.enabled= true
# 断路器的最小请求数
hystrix.command.default.circuitBreaker.requestVolumeThreshold= 10
# 熔断的时间(单位:毫秒)
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds= 10000
# 断路器打开的错误百分比
hystrix.command.default.circuitBreaker.errorThresholdPercentage= 60

# feign开启hystrix
feign.hystrix.enabled= true

env= dev
girl.name= chc
girl.age= 22
